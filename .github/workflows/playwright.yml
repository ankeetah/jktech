name: Playwright Tests CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'
  
jobs:
  # Lint and Code Quality (Optional)
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (if configured)
      run: npm run lint || echo "No linting configured"
      continue-on-error: true
      
    - name: Check formatting (if configured)
      run: npm run format:check || echo "No formatting check configured"
      continue-on-error: true

  # Integration Tests with Playwright
  playwright-tests:
    name: Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: code-quality
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
          
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.project }}
      
    - name: Create .env file for CI
      run: |
        echo "BASE_URL=${{ secrets.BASE_URL || 'https://example.com' }}" >> .env
        echo "CI=true" >> .env
        
    - name: Create auth directory
      run: mkdir -p .auth
      
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }}
      env:
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-results-${{ matrix.project }}
        path: |
          test-results/
          allure-results/
        retention-days: 30
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report-${{ matrix.project }}
        path: playwright-report/
        retention-days: 30

  # Generate Allure Report
  generate-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: playwright-tests
    if: ${{ !cancelled() }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        pattern: playwright-results-*
        merge-multiple: true
        path: allure-results/
        
    - name: Setup Java for Allure
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '11'
        
    - name: Setup Allure
      run: |
        curl -L https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz | tar -xz
        sudo ln -s $(pwd)/allure-2.24.0/bin/allure /usr/local/bin/allure
        
    - name: Generate Allure report
      run: allure generate allure-results --clean -o allure-report
      
    - name: Upload Allure report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

  # Deploy reports (optional)
  deploy-reports:
    name: Deploy Reports to GitHub Pages
    runs-on: ubuntu-latest
    needs: generate-report
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download Allure report
      uses: actions/download-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        destination_dir: test-reports